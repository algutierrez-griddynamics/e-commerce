# version: '1.0'

services:
  database:
    image: postgres:latest
    container_name: orders-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./e-commerce/db:/docker-entrypoint-initdb.d
    networks:
      - ecommerce-network

  spring-cloud-config-server:
    image: brianvega/spring-cloud-config-server:0.0.1-SNAPSHOT
    ports:
      - "8761:8761"
    depends_on:
      - database
    networks:
      - ecommerce-network

  billing-information-service:
    image: brianvega/billing-information-service:0.0.1-SNAPSHOT
    ports:
      - "8081:8081"
    depends_on:
      - spring-cloud-config-server
    networks:
      - ecommerce-network
    env_file: '.env'

  billing-information-service_2:
    image: brianvega/billing-information-service:0.0.1-SNAPSHOT
    ports:
      - "8082:8082"
    depends_on:
      - spring-cloud-config-server
    networks:
      - ecommerce-network
    env_file: '.env'

  payment-details-service:
    image: brianvega/payment-details-service:0.0.1-SNAPSHOT
    ports:
      - "8083:8083"
    depends_on:
      - spring-cloud-config-server
    networks:
      - ecommerce-network
    env_file: '.env'

  shipping-information-service:
    image: brianvega/shipping-information-service:0.0.1-SNAPSHOT
    ports:
      - "8084:8084"
    depends_on:
      - spring-cloud-config-server
    networks:
      - ecommerce-network
    env_file: '.env'

  orders-service:
    image: brianvega/orders-service:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
    depends_on:
      - spring-cloud-config-server
      - billing-information-service
      - billing-information-service_2
      - payment-details-service
      - shipping-information-service
    networks:
      - ecommerce-network
    env_file: '.env'
    volumes:
      - order-data:/workspace/data

  api-gateway:
    image: brianvega/api-gateway:0.0.1-SNAPSHOT
    ports:
      - "8765:8765"
    depends_on:
      - orders-service
    networks:
      - ecommerce-network
    env_file: '.env'

networks:
  ecommerce-network:
    driver: bridge
volumes:
  order-data:
  db_data: